*** Settings ***
Documentation   This test goes through every file in the corpus and sees if a conversion process occurred and if only the accepted errors were passed through and if the XML files matches JATS format.

Variables       testvars.py
Library         OperatingSystem
Library                 String
Library                 XML
Library                 Collections
Library                 Process

*** User Keywords ***

# Same test as Element in Sample Body Found in Convert, except with different file paths for a specific file manipulated
# for test-tweaking purposes and demoing.


Demo Element in Sample Body Found in Convert
        [arguments]     ${filePath}     ${xpath}
    [Timeout]       30 sec
    Log Variables
    Run Process     sudo python absXpath.py ${demoParentPath}/${filePath}-gold.xml ${convertParentPath}/${filePath}.docx/nlm/out.xml ${xpath}                shell=True
    ${pathTestResult}=      Get File        pathTestResults
    Should Be Equal As Strings      ${pathTestResult}       Success!            ${xpath} ${errorMessage}                False

# This test will check to see if all the elements of a specific tag in a meTypeset'd document has a corresponding tag in the sample XML that has the same
# text associated with it as well as the same XML path.

Element in Sample Body Found in Convert
        [arguments]             ${filePath}             ${xpath}
        [Timeout]               30 sec
        Log Variables
        # This python functio (absXpath.py) does the actual comparision, and outputs the result to 'pathTestResults'
        Run Process                     sudo python absXpath.py ${sampleParentPath}/${filePath}.nxml ${convertParentPath}/${filePath}.docx/nlm/out.xml ${xpath}                 shell=True
        ${pathTestResult}=              Get File                pathTestResults
        Should Be Equal As Strings              ${pathTestResult}               Success!                ${xpath} ${errorMessage}                        False

# Runs only when error file from xmllint test of meTypeset'd xml returns an error when checked against JATS Green DTD.
# Checks to make sure the only error is "Document ./testOutput/OpenMed-###-e###./nlm/out.xml: ### element xref: validity error IDREFS attribute
# references an unknown ID "TO_LINK".

Acceptable Errors Present
        [arguments]             ${errors}
        ${errorFile}=   Get File        ${errors}
        ${ret}=                 Should Match Regexp             ${errorFile}            ${AcceptableErrorRegex}

# Checks to make sure that a converted file is present in the expected place. If there is an error present, a check is done to make sure that only
# expected errors are present.

File is Converted and Errors Highlighted
        [arguments]     ${filePath}
        File Should Exist       testOutput/${filePath}.docx/nlm/out.xml
        ${status}       Run Keyword and Ignore Error            File Should Be Empty         error/${filePath}.docx
        Run Keyword If          ${status} != ('PASS', None)             Acceptable Errors Present                 error/${filePath}.docx

File Test Cases
        [arguments]     ${filePath}
        File is Converted and Errors Highlighted        ${filePath}
        :FOR    ${neededXPath}          IN      @{necessaryMatchElems}
        \       Run Keyword and Continue on Failure             Element in Sample Body Found in Convert         ${filePath}     ${neededXPath}




*** Test Cases ***

OpenMed-01-e1
        File Test Cases         OpenMed-01-e1

Demo with Custom XML File
        :FOR    ${neededXPath}          IN      @{necessaryMatchElems}
        \       Run Keyword and Continue on Failure             Demo Element in Sample Body Found in Convert            OpenMed-01-e171         ${neededXPath}
~                                                                                                                                                                 
